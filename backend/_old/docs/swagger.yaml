openapi: 3.0.0
info:
  version: 1.0.0
  title: Könyvtári nyilvántartó - MÉG NINCS ÁTALAKÍTVA!!!
  description: A Könyvtári nyilvántartó REST API dokumentációja
servers:
  - url: http://localhost:3000
paths:
  /person/count:
    get:
      description: Returns a count of persons
      responses:
        '200':
          description: Number of persons affected in vaccination, included html code.
          content:
            html:
              schema:
                type: string
                # items:
                #   $ref: '#/components/schemas/Person'
  /person/vaccinated:
    get:
      description: Returns an array of persons
      responses:
        '200':
          description: Number of persons really vaccinated, included html code.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /person/{person_id}/{vaccine_name}:
    put:
      description: Sets the person with given :id vaccinated with :vaccine.
      parameters:
        - name: person_id
          in: path
          required: true
          schema:
            type: string
        - name: vaccine_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Sentence with html response:`<h3>A ${req.params.id} _id-jű személy ${isVaccinated} rendelkezik oltással.</h3>`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        # '500':
        #   description: Internal server error
        #   content:
        #     application/json:
        #       schema:
        #         $ref: '#/components/schemas/Error'
  #   post:
  #     description: Creates a new person
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Person'
  #     responses:
  #       '201':
  #         description: Person has been created successfully
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Person'
  #       '400':
  #         description: Invalid request
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '500':
  #         description: Internal server error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  # /person/{person_id}:
  #   get:
  #     description: Returns the person with the given ID
  #     parameters:
  #       - name: person_id
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: Person data returned successfully
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Person'
  #       '404':
  #         description: Person with the give ID was not found
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '500':
  #         description: Internal server error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
components:
  schemas:
    Person:
      type: object
      required:
        - firstName
        - lastName
        # - email
      properties:
        firstName:
          type: string
        lastName:
          type: string
        vaccine:
          type: object
          properties:
            vaccine:
              type: mongoose.Schema.Types.ObjectId
            count:
              type: number
    Vaccine:
      type: object
      properties:
        name:
          type: string
        efficiency:
          type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean